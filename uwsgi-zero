#!/bin/sh
# libpcreposix only, jemalloc, libatomic
# PC Files???

set -xe
hash tar gzip make cmake nproc patch

_CC=$(readlink -f $(which ${CC:-cc}))

echo ___COMPILER___
$_CC --version

export CFLAGS='-march=native -O3 -pipe'

echo Checking whether the compiler supports “-fstack-protector-strong”…
echo 'int main(){}' | $_CC -fsyntax-only -fstack-protector-strong -xc - && CFLAGS="$CFLAGS -fstack-protector-strong"
echo

echo Detecting which compiler is under use…
case $(basename $_CC) in
	clang*)_CC=clang && CFLAGS="$CFLAGS -Wno-unused-command-line-argument";;
	*gcc*) _CC=gcc   ;; # Asterix at start: x86_64-linux-gnu-gcc-8
	*) echo Unsupported compiler \`$_CC\' && false
esac

_root=$PWD

cd deps

# Gathering all the dependencies
# EPOLLEXCLUSIVE not available : Linux4.5 / glibc2.24
# reuseport is available : Linux3.9+

# MUSL
cd musl
#sed -i 's|-std=c99|-std=c11|' Makefile
./configure --prefix=/opt --enable-wrapper=$_CC #--enable-warnings
make -j`nproc` --silent install
cd -

# Headers are required for LibreSSL & nginx
cd kernel-headers
make -j`nproc` ARCH=x86_64 DESTDIR=/opt prefix= install
cd -

export CC=/opt/bin/musl-$_CC LDFLAGS=-static

#cd jemalloc
#./configure --prefix=/opt --disable-cxx
#make -j`nproc` install_lib_static
#cd -

# PCRE
# I have a bug which does not aloud me to make
# PCRE without automake if I extract and commit
# Therefor, I need to manually extract it
tar xf pcre-*.tar.gz
cd pcre-*
./configure --prefix=/opt --enable-jit --enable-utf --enable-unicode-properties --disable-cpp --enable-shared=0
make -j`nproc` install-binSCRIPTS install-libLTLIBRARIES install-nodist_includeHEADERS # The bin is required for njs
# pkgconfigDATA includeHEADERS=pcreposix
cd -

# ZLIB
cd zlib
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt
make -j`nproc` zlibstatic
# TODO
cp libz.a /opt/lib
cp zlib.h zconf.h /opt/include
cd -

# LibreSSL
# LibreSSL from Git requires automake, autoconf, etc.
# https://github.com/libressl-portable/portable/tree/master#prerequisites-when-building-from-a-git-checkout
tar xf libressl-*.tar.gz
cd libressl-*
rm include/tls.h
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt
make -j`nproc` ssl crypto
cmake -P include/cmake_install.cmake
cmake -P crypto/cmake_install.cmake
cmake -P ssl/cmake_install.cmake
cd -

cd expat/expat
sed -i '4s/)/, C)/' CMakeLists.txt
cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt -DBUILD_examples=0 -DBUILD_tests=0 -DBUILD_shared=0 -DBUILD_doc=0
make -j`nproc` install
cd -

mkdir /opt/include/uuid
cp /usr/include/uuid/uuid.h /opt/include/uuid

cd uwsgi
python3 uwsgiconfig.py --build
cd -
